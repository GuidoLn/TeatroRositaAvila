
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Linq;
namespace ProyectoFinal.DataLayer
{

using System;
    using System.Collections.Generic;
    public partial class Cuenta
    {

    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
    public Cuenta()
    {

        this.Cliente = new HashSet<Cliente>();

        this.Empleado = new HashSet<Empleado>();

    }


    public long Id { get; set; }

    public string Usuario { get; set; }

    public string Contraseña { get; set; }

    public bool Estado { get; set; }

    public string TipoUsuario { get; set; }



    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]

    public virtual ICollection<Cliente> Cliente { get; set; }

    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]

    public virtual ICollection<Empleado> Empleado { get; set; }

        public string verificarCuenta(string usuario, string clave)
        {
            List<Cuenta> cuentas = new List<Cuenta>();

            using (TeatroEntities db = new TeatroEntities())
            {
                cuentas = db.Cuenta.ToList();
            }

            foreach (Cuenta element in cuentas)
            {
                if (usuario == element.Usuario && clave == element.Contraseña)
                {
                    return element.TipoUsuario;
                }
            }

            return string.Empty;
        }
        public string verificarCuenta(string userName)
        {
            List<Cuenta> cuentas = new List<Cuenta>();

            using (TeatroEntities db = new TeatroEntities())
            {
                cuentas = db.Cuenta.ToList();
            }

            foreach (Cuenta element in cuentas)
            {
                if (userName == element.Usuario)
                {
                    return element.TipoUsuario;
                }
            }

            return string.Empty;
        }
    }

}
